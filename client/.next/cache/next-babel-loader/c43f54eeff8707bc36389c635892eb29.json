{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/vikasshukla/Documents/Learning Projects/ticketing/client/pages/index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport buildClient from '../api/build-client';\n\nvar LandingPage = function LandingPage(_ref) {\n  var currentUser = _ref.currentUser;\n  return currentUser ? __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }\n  }, \"You are signed in!\") : __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, \"You are NOT signed in\");\n}; // anything we return in getInitialProps, will be props for our main component\n// so if we need data while SSR, we need to make server requests in this function\n// Once everything is loaded, then this function doesn't really have a purpose\n// At that point, would just fetch data normally inside the component\n\n\n_c = LandingPage;\n\nLandingPage.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var client, _yield$client$get, data;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log('LANDING PAGE');\n            client = buildClient(context);\n            _context.next = 4;\n            return client.get('/api/users/currentuser');\n\n          case 4:\n            _yield$client$get = _context.sent;\n            data = _yield$client$get.data;\n            return _context.abrupt(\"return\", data);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default LandingPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LandingPage\");","map":{"version":3,"sources":["/Users/vikasshukla/Documents/Learning Projects/ticketing/client/pages/index.js"],"names":["buildClient","LandingPage","currentUser","getInitialProps","context","console","log","client","get","data"],"mappings":";;;;;;;;AAAA,OAAOA,WAAP,MAAwB,qBAAxB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAqB;AAAA,MAAlBC,WAAkB,QAAlBA,WAAkB;AACvC,SAAOA,WAAW,GAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADgB,GAGhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAHF;AAKD,CAND,C,CAQA;AACA;AACA;AACA;;;KAXMD,W;;AAYNA,WAAW,CAACE,eAAZ;AAAA,uEAA8B,iBAAMC,OAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAC5BC,YAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACMC,YAAAA,MAFsB,GAEbP,WAAW,CAACI,OAAD,CAFE;AAAA;AAAA,mBAGLG,MAAM,CAACC,GAAP,CAAW,wBAAX,CAHK;;AAAA;AAAA;AAGpBC,YAAAA,IAHoB,qBAGpBA,IAHoB;AAAA,6CAIrBA,IAJqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA9B;;AAAA;AAAA;AAAA;AAAA;;AAOA,eAAeR,WAAf","sourcesContent":["import buildClient from '../api/build-client';\n\nconst LandingPage = ({ currentUser }) => {\n  return currentUser ? (\n    <h1>You are signed in!</h1>\n  ) : (\n    <h1>You are NOT signed in</h1>\n  );\n};\n\n// anything we return in getInitialProps, will be props for our main component\n// so if we need data while SSR, we need to make server requests in this function\n// Once everything is loaded, then this function doesn't really have a purpose\n// At that point, would just fetch data normally inside the component\nLandingPage.getInitialProps = async context => {\n  console.log('LANDING PAGE');\n  const client = buildClient(context);\n  const { data } = await client.get('/api/users/currentuser');\n  return data;\n};\n\nexport default LandingPage;\n"]},"metadata":{},"sourceType":"module"}